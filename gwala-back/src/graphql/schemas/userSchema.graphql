type User {
  _id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  location: [Float]!
}

type AuthPayload {
  accessToken: String
  refreshToken: String
  user: User
}

type Query {
  getAllUsers: [User!]!
  getUserById(id: ID!): User
}

type PasswordResetToken {
  token: String!
  expiration: String!
}

type Mutation {
  signUp(name: String!, email: String!, password: String!, location: [Float]!): AuthPayload!
  signIn(email: String!, password: String!): AuthPayload!
  requestPasswordReset(email: String!): Boolean
  resetPassword(token: String!, newPassword: String!): AuthPayload!
}
